tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
tt$validCdr<-ifelse(grepl("^C.{4,34}W$",tt$aaSeq),TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
seqs<-rbind(seqs,tt[tt$validCdr==TRUE,"aaSeq"])
datalist[[i]]<-tt
}
seqs
t
seqs<-tibble(aaSeq=character(),file=character())
seqs
#bind valid cdrs to 'seqs'
temp<-tt[tt$validCdr==TRUE,"aaSeq"]
temp
seqs<-tibble(aaSeq=character(),file=character())
temp1
#bind valid cdrs to 'seqs'
temp1<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1
temp2<-tibble(file=rep("test",20))
temp2
nrow(temp1)
rep("test",nrow(temp1))
temp2<-tibble(file=rep(files[i],nrow(temp1)))
temp2
temp2<-tibble(file=rep(files_short[i],nrow(temp1)))
temp2
temp<-cbind(temp1,temp2)
temp
#bind valid cdrs to 'seqs'
temp1<-tibble(file=rep(files_short[i],nrow(temp1)))
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp<-cbind(temp1,temp2)
temp
seqs<-rbind(seqs,temp)
seqs
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
tt$validCdr<-ifelse(grepl("^C.{4,34}W$",tt$aaSeq),TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp1<-tibble(file=rep(files_short[i],nrow(temp1)))
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
seqs
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
tt$validCdr<-ifelse(grepl("^C.{4,34}W$",tt$aaSeq),TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp1)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
i<-1
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
tt$validCdr<-ifelse(grepl("^C.{4,34}W$",tt$aaSeq),TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp1)))
temp<-cbind(temp1,temp2)
temp2
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp2)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
tt$validCdr<-ifelse(grepl("^C.{4,34}W$",tt$aaSeq),TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp2)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
seqs
condOne<-grepl("^C.{4,34}W$",tt$aaSeq)
tt$validCdr<-ifelse(condOne,TRUE,FALSE)
validCdr
tt$validCdr
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
condOne<-grepl("^C.{4,34}W$",tt$aaSeq)
tt$validCdr<-ifelse(condOne,TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp2)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
seqs
conditionOne<-grepl("^C.{4,34}W$",tt$aaSeq)
conditionTwo<-grepl("[//^#]",tt$aaSeq)
tt$validCdr<-ifelse(conditionOne & conditionTwo,TRUE,FALSE)
tt
conditionOne<-grepl("^C.{4,34}W$",tt$aaSeq)
conditionTwo<-!grepl("[//^#]",tt$aaSeq)
tt$validCdr<-ifelse(conditionOne & conditionTwo,TRUE,FALSE)
tt
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
conditionOne<-grepl("^C.{4,34}W$",tt$aaSeq)
conditionTwo<-!grepl("[//^#]",tt$aaSeq)
tt$validCdr<-ifelse(conditionOne & conditionTwo,TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp2)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
seqs
conditionTwo<-!grepl("[//^//*]",tt$aaSeq)
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
conditionOne<-grepl("^C.{4,34}W$",tt$aaSeq)
conditionTwo<-!grepl("[//^//*]",tt$aaSeq)
tt$validCdr<-ifelse(conditionOne & conditionTwo,TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp2)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
seqs
conditionTwo<-!grepl("//*",tt$aaSeq)
conditionTwo
tt$aaSeq
grepl("//*",tt$aaSeq)
!grepl("/*",tt$aaSeq)
grepl("*",tt$aaSeq)
!grepl("\*",tt$aaSeq)
grepl("\\*",tt$aaSeq)
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
conditionOne<-grepl("^C.{4,34}W$",tt$aaSeq)
conditionTwo<-!grepl("\\*",tt$aaSeq)
tt$validCdr<-ifelse(conditionOne & conditionTwo,TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp2)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
seqs
seqs<-tibble(aaSeq=character(),file=character())
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
conditionOne<-grepl("^C.{4,34}W$",tt$aaSeq)
conditionTwo<-!grepl("\\*",tt$aaSeq)
tt$validCdr<-ifelse(conditionOne & conditionTwo,TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp2)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
seqs
seqs<-tibble(aaSeq=character(),file=character())
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
conditionOne<-grepl("^C.{4,34}W$",tt$aaSeq)
conditionTwo<-!grepl("[\\*#]",tt$aaSeq)
tt$validCdr<-ifelse(conditionOne & conditionTwo,TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp2)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
seqs
table(seqs$aaSeq)
head(order(table(seqs$aaSeq)))
order(table(seqs$aaSeq))
table(seqs$aaSeq)
ggplot(seqs,aes(aaSeq))+geom_bar()
seqs
seqs<-tibble(aaSeq=character(),file=character())
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
conditionOne<-grepl("^C.{4,34}W$",tt$aaSeq)
conditionTwo<-!grepl("[\\*#]",tt$aaSeq)
tt$validCdr<-ifelse(conditionOne & conditionTwo,TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp2)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
seqs
seqs<-tibble(seqs)
seqs
seqs<-as_tibble(seqs)
seqs
sort(table(seqs$aaSeq),decreasing = T)
head(sort(table(seqs$aaSeq),decreasing = T))
top<-head(sort(table(seqs$aaSeq),decreasing = T))
top
seqs[seqs$aaSeq='CAKGPNSGYYDSDIAGGMDYW',]
seqs[seqs$aaSeq=='CAKGPNSGYYDSDIAGGMDYW',]
first<-seqs[seqs$aaSeq=='CAKGPNSGYYDSDIAGGMDYW',]
first
table(first$file)
sort(table(first$file),decreasing=T)
plot(sort(table(first$file),decreasing=T))
?plot
ggplot(as.data.frame(sort(table(first$file),decreasing=T)))+geom_bar()
ggplot(as.data.frame(first$file))+geom_bar()
ggplot(as.data.frame(first$file))+geom_bar(aes(first$file=first$file),stat=count)
first
first<-seqs[seqs$aaSeq=='CAKGPNSGYYDSDIAGGMDYW']
first
first<-seqs$aaSeq[seqs$aaSeq=='CAKGPNSGYYDSDIAGGMDYW']
first
first<-seqs[seqs$aaSeq=='CAKGPNSGYYDSDIAGGMDYW',]
first
seqs
seqs
require(plyr)
summary <- ddply(seqs,.(file),summarise,freq=length(file))
summary
summary <- ddply(seqs,.(c(aaSeq,file)),summarise,freq=length(c(aaSeq,file)))
summary
seqs$concat<-paste(seqs$file,seqs$aaSeq)
seqs
summary <- ddply(seqs,.(concat),summarise,freq=length(concat)
)
summary
sort(summary)
sort(summary$freq)
summary <- ddply(seqs,.(concat),summarise,freq=length(concat))
summary
summary <- ddply(seqs,.(aaSeq),summarise,freq=length(aaSeq))
summary
summary<-summary[order(freq),]
str(sort)
str(summary)
summary<-summary[order(freq),]
summary<-summary[order(summary$freq),]
summary
summary<-head(summary[order(summary$freq),])
summary
summary<-head(summary[order(-summary$freq),])
sort(summary$freq)
summary<-head(summary[order(summary$freq),])
summary
summary<-head(summary[order(-summary$freq),])
summary
summary<-head(summary[order(-summary$freq),])
summary
summary<-tail(summary[order(-summary$freq),])
summary
summary <- ddply(seqs,.(aaSeq),summarise,freq=length(aaSeq))
summary
summary<-tail(summary[order(-summary$freq),])
summary
summary<-head(summary[order(-summary$freq),])
summary
summary <- ddply(seqs,.(aaSeq),summarise,freq=length(aaSeq))
summary
summary[order(-summary$freq),]
summary
colnames(summary)
str(summary)
-summary$freq
order(-summary$freq)
summary[order(-summary$freq),]
summary<-head(summary[order(-summary$freq),])
summary
summary<-head(summary[order(-summary$freq),],n=10)
summary
summary
summary<-ddply(seqs,.(aaSeq),summarise,freq=length(aaSeq))
summary<-head(summary[order(-summary$freq),],n=10)
summary
top<-summary$aaSeq
top
seqs
seqs$aaSeq<-factor(seqs$aaSeq)
seqs
seqs
seqsTop<-seqs[seqs$aaSeq %>% top,]
top<-summary$aaSeq
seqs$aaSeq<-factor(seqs$aaSeq)
seqsTop<-seqs[seqs$aaSeq %>% top,]
seqsTop
topTen<-summary$aaSeq
topTen
seqs$aaSeq<-factor(seqs$aaSeq)
seqsTop<-seqs[seqs$aaSeq %>% top,]
seqsTop<-seqs[seqs$aaSeq %>% topTen,]
seqsTop<-seqs[seqs$aaSeq %in% topTen,]
seqsTop
ggplot(seqsTop,aes(aaSeq))+geom_bar()
top<-head(sort(table(seqs$aaSeq),decreasing = T))+coord_flip()
ggplot(seqsTop,aes(aaSeq))+geom_bar()+coord_flip()
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()
colorCount<-nlevels(seqs$file)
getPalette<-colorRampPalette(brewer.pal(9,'Set1'))
library(RColorBrewer)
colorCount<-nlevels(seqs$file)
getPalette<-colorRampPalette(brewer.pal(9,'Set1'))
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()scale_fill_manual(values = getPalette(colorCount))
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()+scale_fill_manual(values = getPalette(colorCount))
nlevels(seqs$file)
seqs$file
seqs$file<-factor(seqs$file)
colorCount<-nlevels(seqs$file)
getPalette<-colorRampPalette(brewer.pal(9,'Set1'))
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()+scale_fill_manual(values = getPalette(colorCount))
pdf(paste0(outFolder,"topTenClones"))
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()+scale_fill_manual(values = getPalette(colorCount))
dev.off()
pdf(paste0(outFolder,"topTenClones.pdf"))
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()+scale_fill_manual(values = getPalette(colorCount))
dev.off()
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()+scale_fill_manual(values = getPalette(colorCount))+guides(fill=guide_legend(title = 'Clonotypes',ncol = 1))
pdf(paste0(outFolder,"topTenClones.pdf"))
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()+scale_fill_manual(values = getPalette(colorCount))+guides(fill=guide_legend(title = 'Clonotypes',ncol = 1))
dev.off()
pdf(paste0(outFolder,"topTenClones.pdf"))
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()+scale_fill_manual(values = getPalette(colorCount))+guides(fill=guide_legend(title = 'Samples',ncol = 1))
dev.off()
seqsTop
ggplot(seqsTop,aes(file,aaSeq))+geom_point()
ggplot(seqsTop,aes(file,aaSeq))+geom_point()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
pdf(paste0(outFolder,"topTenClones_cloneVsAbundance.pdf"))
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()+scale_fill_manual(values = getPalette(colorCount))+guides(fill=guide_legend(title = 'Samples',ncol = 1))
dev.off()
pdf(paste0(outFolder,"topTenClones_sampleVsClone.pdf"))
ggplot(seqsTop,aes(file,aaSeq))+geom_point()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
ggplot(seqsTop,aes(file,aaSeq))+geom_point(size=22)+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(seqsTop,aes(file,aaSeq))+geom_point(aes(size=12))+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(seqsTop,aes(file,aaSeq))+geom_point(aes(size=5))+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(seqsTop,aes(file,aaSeq))+geom_point()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(tidyverse)
library(here)
library(gsubfn)
library(reshape2)
targetfolder<-"../../Data/Counts/"
outfolder<-"../../Data/CountPlots/"
outTables<-"../../Data/Tables/"
#parse 'before' names & truncate path
name<-read_table(paste0(targetfolder,"beforeQC-names.txt"),col_names=F)
#parse 'before' counts
beforeCount<-read_table(paste0(targetfolder,"beforeQC-count.txt"),col_names=F)
#parse 'after' counts
afterCount<-read_table(paste0(targetfolder,"afterQC-count.txt"),col_names=F)
#bind columns, removed duplicate lines (R1/R2), truncate file name
d<-bind_cols(name,beforeCount,afterCount)
colnames(d)<-c('file','before','after')
d<-d[grep("_R1_",d$file),]
d$file<-sub("_L001_R1_001.fastq.gz","",d$file)
d$file<-basename(d$file)
#melt
dd<-melt(d,id='file')
dd$rep<-ifelse(grepl("-[0-9]+[A-Z]*D[0-9]+P[0-9]*[13579]C",dd$file),'rep1','rep2')
dd$sample<-sub("D[0-9]+P[0-9]+C[0-9]+P[0-9]+C[0-9]+$","",dd$file)
dd$fraction<-ifelse(grepl("1$",dd$sample),'pellet','supernatant')
dd$submission<-sub("-[0-9]+[A-Z]*$","",dd$sample)
colnames(dd)<-c('file','type','count','rep')
#bargraph before/after - by file
pdf(paste0(outfolder,"preClntab_beforeAfterQc_bar_byFile.pdf"))
ggplot(dd,aes(file,count,fill=type))+geom_bar(position="dodge", stat="identity")+coord_flip()
dev.off()
ggplot(dd,aes(file,count,fill=type))+geom_bar(position="dodge", stat="identity")+coord_flip()
outfolder
dir.create(outfolder)
#bargraph before/after - by file
pdf(paste0(outfolder,"preClntab_beforeAfterQc_bar_byFile.pdf"))
ggplot(dd,aes(file,count,fill=type))+geom_bar(position="dodge", stat="identity")+coord_flip()
dev.off()
#boxplot before/after - by sample
pdf(paste0(outfolder,"preClntab_beforeAfterQC_box_bySample.pdf"))
ggplot(dd,aes(sample,count,fill=type))+geom_boxplot()+coord_flip()
dev.off()
dd
dd<-as_tibble(dd)
dd
library(tidyverse)
library(here)
library(seqinr)
library(RColorBrewer)
targetFolder<-"../../Data/Clntab/"
outFolder<-"../../Data/CountPlots/"
datalist<-list()
files<-list.files(targetFolder)
files
files<-list.files(targetFolder,pattern ="*.clntab",recursive = T)
files
files<-list.files(targetFolder,pattern ="*.clntab",recursive = T)
files_short<-sub("_L001_R1_001.fastq.processed.junctioned.profiled.clntab","",files)
files_short
files_short<-basename(sub("_L001_R1_001.fastq.processed.junctioned.profiled.clntab","",files))
files_short
seqs<-tibble(aaSeq=character(),file=character())
for (i in 1:length(files)){
print(files[i])
t<-read_tsv(paste0(targetFolder,files[i]))
tt<-subset(t, select=c("sequence.5-GENE","sequence.3-GENE","sequence.JUNCTION.aa seq","sequence.JUNCTION.aa seq.len","sequence.chain"))
colnames(tt)<-c("v","j","aaSeq","aaLength","chain")
conditionOne<-grepl("^C.{4,34}W$",tt$aaSeq)
conditionTwo<-!grepl("[\\*#]",tt$aaSeq)
tt$validCdr<-ifelse(conditionOne & conditionTwo,TRUE,FALSE)
tt$chain<-factor(tt$chain,levels=c('A','B','D','G','H','K','NA'))
#bind valid cdrs to 'seqs'
temp2<-tt[tt$validCdr==TRUE,"aaSeq"]
temp1<-tibble(file=rep(files_short[i],nrow(temp2)))
temp<-cbind(temp1,temp2)
seqs<-rbind(seqs,temp)
datalist[[i]]<-tt
}
seqs<-as_tibble(seqs)
require(plyr)
seqs$concat<-paste(seqs$file,seqs$aaSeq)
summary<-ddply(seqs,.(aaSeq),summarise,freq=length(aaSeq))
summary<-head(summary[order(-summary$freq),],n=10)
topTen<-summary$aaSeq
seqs$aaSeq<-factor(seqs$aaSeq)
seqs$file<-factor(seqs$file)
seqsTop<-seqs[seqs$aaSeq %in% topTen,]
colorCount<-nlevels(seqs$file)
getPalette<-colorRampPalette(brewer.pal(9,'Set1'))
ggplot(seqsTop,aes(aaSeq,fill=file))+geom_bar()+coord_flip()+scale_fill_manual(values = getPalette(colorCount))+guides(fill=guide_legend(title = 'Samples',ncol = 1))
ggplot(seqsTop,aes(file,aaSeq))+geom_point()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
plotlistLoci<-list()
plotlistTRB<-list()
plotlistIGH<-list()
for (i in 1:length(datalist)){
t<-datalist[[i]]
p<-ggplot(t,aes(chain, fill=(validCdr)))+geom_bar()+ggtitle(files_short[i])+theme(plot.title = element_text(hjust = 0.5))+scale_x_discrete(limits=c('A','B','D','G','H','K','NA'))
plotlistLoci[[i]]<-ggplotGrob(p)
t.b<-t[t$validCdr==T & t$chain=='B',]
p<-plotlistTRB[[i]]<-ggplot(t.b,aes(aaLength,fill=(aaSeq)))+geom_bar()+guides(fill=F)+xlim(4,38)+ggtitle(files_short[i])+theme(plot.title = element_text(hjust = 0.5,size=10))
plotlistTRB[[i]]<-ggplotGrob(p)
t.h<-t[t$validCdr==T & t$chain=='H',]
p<-plotlistIGH[[i]]<-ggplot(t.h,aes(aaLength,fill=(aaSeq)))+geom_bar()+guides(fill=F)+xlim(4,38)+ggtitle(files_short[i])+theme(plot.title = element_text(hjust = 0.5,size=10))
plotlistIGH[[i]]<-ggplotGrob(p)
}
marrangeGrob(plotlistLoci, nrow=2, ncol=2)
require(gridExtra)
marrangeGrob(plotlistLoci, nrow=2, ncol=2)
require(gridExtra)
pdf(paste0(outFolder,'clntab_byLocus.pdf'))
marrangeGrob(plotlistLoci, nrow=2, ncol=2)
dev.off()
pdf(paste0(outFolder,'clntab_trbByAaLength.pdf'))
print(marrangeGrob(plotlistTRB, nrow=4, ncol=4))
dev.off()
pdf(paste0(outFolder,'clntab_ighByAaLength.pdf'))
print(marrangeGrob(plotlistIGH, nrow=4, ncol=4))
dev.off()
ggplot(seqs,aes(aaSeq))+geom_bar()
files_short
q

Initialize the local directory as a Git repository.
$ git init

Add the files in your new local repository. This stages them for the first commit.
$ git add .
# Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.


Commit the files that you've staged in your local repository.
$ git commit -m "First commit"
# Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again


$ git remote add origin https://github.com/user/repo.git
# Set a new remote


$ git remote -v
# Verify new remote
> origin  https://github.com/user/repo.git (fetch)
> origin  https://github.com/user/repo.git (push)


#=========== git username & email =============
#different from github username; associates commits with identity
#determine user name
$ git config --global user.name
> Mona Lisa
#set user name
$ git config --global user.name "Mona Lisa"

#determine email
$ git config --global user.email
>email@example.com
#set email
$ git config --global user.email "email@example.com"

#============= resolve conflict ================
https://help.github.com/en/articles/resolving-a-merge-conflict-using-the-command-line
